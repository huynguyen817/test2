import React, { useEffect, useState } from "react";
import { Form, Input, Button, DatePicker, Select, InputNumber } from "antd";
import { db, ref, update, onValue } from "./firebaseConfig";
import dayjs from "dayjs";

const { RangePicker } = DatePicker;
const { Option } = Select;

export default function EditProduct({ product, closeModal }) {
    const [form] = Form.useForm();
    const [eventList, setEventList] = useState([]);

    // üìå L·∫•y danh s√°ch s·ª± ki·ªán t·ª´ Firebase
    useEffect(() => {
        const eventsRef = ref(db, "events");
        onValue(eventsRef, (snapshot) => {
            const data = snapshot.val();
            if (data) {
                const eventArray = Object.keys(data).map((key) => ({
                    id: key,
                    name: data[key].eventName,
                }));
                setEventList(eventArray);
            }
        });
    }, []);

    // üìå ƒê·∫∑t gi√° tr·ªã m·∫∑c ƒë·ªãnh khi m·ªü form s·ª≠a
    useEffect(() => {
        if (product) {
            form.setFieldsValue({
                title: product.title,
                eventType: product.eventType,
                dateRange: [
                    product.startDate ? dayjs(product.startDate, "YYYY-MM-DD") : null,
                    product.endDate ? dayjs(product.endDate, "YYYY-MM-DD") : null,
                ],
                eventName: product.eventName,
                points: product.points,
            });
        }
    }, [product, form]);

    // üìå X·ª≠ l√Ω c·∫≠p nh·∫≠t s·∫£n ph·∫©m
    const handleSubmit = (values) => {
        if (!product || !product.id) {
            console.error("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m c·∫ßn s·ª≠a!");
            return;
        }

        update(ref(db, `events/${product.id}`), {
            title: values.title,
            eventType: values.eventType,
            startDate: values.dateRange[0]?.format("YYYY-MM-DD"),
            endDate: values.dateRange[1]?.format("YYYY-MM-DD"),
            eventName: values.eventName,
            points: values.points,
        })
            .then(() => {
                console.log("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!");
                form.resetFields();
                closeModal(); // ƒê√≥ng form sau khi c·∫≠p nh·∫≠t th√†nh c√¥ng
            })
            .catch((error) => console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t:", error));
    };

    return (
        <Form form={form} onFinish={handleSubmit} layout="vertical">
            {/* T√™n s·∫£n ph·∫©m */}
            <Form.Item name="title" label="T√™n s·∫£n ph·∫©m" rules={[{ required: true, message: "Nh·∫≠p t√™n s·∫£n ph·∫©m!" }]}>
                <Input placeholder="Nh·∫≠p t√™n s·∫£n ph·∫©m" />
            </Form.Item>

            {/* Lo·∫°i s·ª± ki·ªán */}
            <Form.Item name="eventType" label="Lo·∫°i s·ª± ki·ªán" rules={[{ required: true, message: "Ch·ªçn lo·∫°i s·ª± ki·ªán!" }]}>
                <Select placeholder="Ch·ªçn lo·∫°i s·ª± ki·ªán">
                    <Option value="Qu√Ω">Qu√Ω</Option>
                    <Option value="NƒÉm">NƒÉm</Option>
                </Select>
            </Form.Item>

            {/* Th·ªùi h·∫°n */}
            <Form.Item name="dateRange" label="Th·ªùi h·∫°n" rules={[{ required: true, message: "Ch·ªçn th·ªùi gian!" }]}>
                <RangePicker />
            </Form.Item>

            {/* T√™n s·ª± ki·ªán - Dropdown t·ª´ Firebase */}
            <Form.Item name="eventName" label="T√™n s·ª± ki·ªán" rules={[{ required: true, message: "Ch·ªçn t√™n s·ª± ki·ªán!" }]}>
                <Select placeholder="Ch·ªçn s·ª± ki·ªán">
                    {eventList.map((event) => (
                        <Option key={event.id} value={event.name}>
                            {event.name}
                        </Option>
                    ))}
                </Select>
            </Form.Item>

            {/* ƒêi·ªÉm th∆∞·ªüng */}
            <Form.Item name="points" label="ƒêi·ªÉm th∆∞·ªüng" rules={[{ required: true, message: "Nh·∫≠p ƒëi·ªÉm th∆∞·ªüng!" }]}>
                <InputNumber min={0} placeholder="Nh·∫≠p ƒëi·ªÉm th∆∞·ªüng" style={{ width: "100%" }} />
            </Form.Item>

            {/* N√∫t c·∫≠p nh·∫≠t */}
            <Button type="primary" htmlType="submit">
                C·∫≠p nh·∫≠t
            </Button>
        </Form>
    );
}
