import React, { useState } from "react";
import { Form, Input, Button, Select, InputNumber, message } from "antd";
import { db, ref, push, set } from "./firebaseConfig";
import "../App.css"; // ƒê·∫£m b·∫£o b·∫°n c√≥ file CSS ƒë·ªÉ style form

const { Option } = Select;

export default function CreateEvent({ onClose }) {
    const [form] = Form.useForm();
    const [loading, setLoading] = useState(false);

    // üìå X·ª≠ l√Ω t·∫°o s·ª± ki·ªán
    const handleSubmit = async (values) => {
        setLoading(true);
        try {
            // T·∫°o ID m·ªõi cho s·ª± ki·ªán trong Firebase
            const newEventRef = push(ref(db, "events"));

            // L∆∞u d·ªØ li·ªáu s·ª± ki·ªán
            await set(newEventRef, {
                eventName: values.eventName,
                eventType: values.eventType,
                rewardAmount: values.rewardAmount,
                rewardLimit: values.rewardLimit,
                timestamp: Date.now(),
            });

            message.success("üéâ S·ª± ki·ªán ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!");
            form.resetFields();
            if (onClose) onClose(); // ƒê√≥ng c·ª≠a s·ªï n·∫øu c√≥ props onClose
        } catch (error) {
            console.error("‚ùå L·ªói khi t·∫°o s·ª± ki·ªán:", error);
            message.error("‚ùå L·ªói khi t·∫°o s·ª± ki·ªán!");
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="modal-container">
            <h2>T·∫°o s·ª± ki·ªán m·ªõi</h2>

            <Form form={form} layout="vertical" onFinish={handleSubmit}>
                {/* T√™n s·ª± ki·ªán */}
                <Form.Item
                    label="T√™n s·ª± ki·ªán"
                    name="eventName"
                    rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p t√™n s·ª± ki·ªán!" }]}
                >
                    <Input placeholder="Nh·∫≠p t√™n s·ª± ki·ªán" />
                </Form.Item>

                {/* Lo·∫°i s·ª± ki·ªán */}
                <Form.Item
                    label="Lo·∫°i s·ª± ki·ªán"
                    name="eventType"
                    rules={[{ required: true, message: "Ch·ªçn lo·∫°i s·ª± ki·ªán!" }]}
                >
                    <Select placeholder="Ch·ªçn lo·∫°i s·ª± ki·ªán">
                        <Option value="Qu√Ω">Qu√Ω</Option>
                        <Option value="NƒÉm">NƒÉm</Option>
                    </Select>
                </Form.Item>

                {/* M·ª©c ƒë·ªïi th∆∞·ªüng */}
                <Form.Item
                    label="M·ª©c ƒë·ªïi th∆∞·ªüng"
                    name="rewardAmount"
                    rules={[{ required: true, message: "Nh·∫≠p m·ª©c ƒë·ªïi th∆∞·ªüng!" }]}
                >
                    <InputNumber
                        placeholder="Nh·∫≠p m·ª©c ƒë·ªïi th∆∞·ªüng"
                        min={0}
                        style={{ width: "100%" }}
                    />
                </Form.Item>

                {/* H·∫°n m·ª©c ƒë·ªïi th∆∞·ªüng */}
                <Form.Item
                    label="H·∫°n m·ª©c ƒë·ªïi th∆∞·ªüng"
                    name="rewardLimit"
                    rules={[{ required: true, message: "Nh·∫≠p h·∫°n m·ª©c ƒë·ªïi th∆∞·ªüng!" }]}
                >
                    <InputNumber
                        placeholder="Nh·∫≠p h·∫°n m·ª©c ƒë·ªïi th∆∞·ªüng"
                        min={0}
                        style={{ width: "100%" }}
                    />
                </Form.Item>

                {/* N√∫t h√†nh ƒë·ªông */}
                <div className="form-actions">
                    <Button onClick={onClose} style={{ marginRight: 8 }}>
                        H·ªßy
                    </Button>
                    <Button type="primary" htmlType="submit" loading={loading}>
                        T·∫°o s·ª± ki·ªán
                    </Button>
                </div>
            </Form>
        </div>
    );
}
